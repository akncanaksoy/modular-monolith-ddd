// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Octovis.Location.Infrastructure.Persistence.Context;

#nullable disable

namespace Octovis.Location.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(LocationDbContext))]
    partial class LocationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("location")
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Octovis.Location.Domain.AggregateModels.Addresses.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DistrictId")
                        .HasColumnType("uuid");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("DistrictId");

                    b.ToTable("Addresses", "location");
                });

            modelBuilder.Entity("Octovis.Location.Domain.AggregateModels.Addresses.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities", "location");
                });

            modelBuilder.Entity("Octovis.Location.Domain.AggregateModels.Addresses.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Countries", "location");
                });

            modelBuilder.Entity("Octovis.Location.Domain.AggregateModels.Addresses.District", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Districts", "location");
                });

            modelBuilder.Entity("Octovis.Location.Domain.AggregateModels.Locations.Area", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Areas", "location");
                });

            modelBuilder.Entity("Octovis.Location.Domain.AggregateModels.Locations.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uuid");

                    b.Property<int>("AddressType")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.ToTable("Companies", "location");
                });

            modelBuilder.Entity("Octovis.Location.Domain.AggregateModels.Locations.Dealer", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uuid");

                    b.Property<int>("AddressType")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.ToTable("Dealers", "location");
                });

            modelBuilder.Entity("Octovis.Location.Domain.AggregateModels.Locations.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uuid");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Locations", "location");
                });

            modelBuilder.Entity("Octovis.Location.Domain.AggregateModels.Locations.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uuid");

                    b.Property<int>("AddressType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Regions", "location");
                });

            modelBuilder.Entity("Octovis.Location.Domain.AggregateModels.Locations.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Rooms", "location");
                });

            modelBuilder.Entity("Octovis.Location.Domain.AggregateModels.Locations.UserLocation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("UserId", "LocationId")
                        .IsUnique();

                    b.ToTable("UserLocations", "location");
                });

            modelBuilder.Entity("Octovis.Location.Domain.AggregateModels.Addresses.Address", b =>
                {
                    b.HasOne("Octovis.Location.Domain.AggregateModels.Addresses.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Octovis.Location.Domain.AggregateModels.Addresses.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Octovis.Location.Domain.AggregateModels.Addresses.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("District");
                });

            modelBuilder.Entity("Octovis.Location.Domain.AggregateModels.Addresses.City", b =>
                {
                    b.HasOne("Octovis.Location.Domain.AggregateModels.Addresses.Country", null)
                        .WithMany("_cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Octovis.Location.Domain.AggregateModels.Addresses.District", b =>
                {
                    b.HasOne("Octovis.Location.Domain.AggregateModels.Addresses.City", null)
                        .WithMany("_districts")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Octovis.Location.Domain.AggregateModels.Locations.Area", b =>
                {
                    b.HasOne("Octovis.Location.Domain.AggregateModels.Locations.Location", null)
                        .WithOne("Area")
                        .HasForeignKey("Octovis.Location.Domain.AggregateModels.Locations.Area", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Octovis.Location.Domain.AggregateModels.Locations.Company", b =>
                {
                    b.HasOne("Octovis.Location.Domain.AggregateModels.Locations.Location", null)
                        .WithOne("Company")
                        .HasForeignKey("Octovis.Location.Domain.AggregateModels.Locations.Company", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Octovis.Location.Domain.AggregateModels.Locations.Dealer", b =>
                {
                    b.HasOne("Octovis.Location.Domain.AggregateModels.Locations.Location", null)
                        .WithOne("Dealer")
                        .HasForeignKey("Octovis.Location.Domain.AggregateModels.Locations.Dealer", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Octovis.Location.Domain.AggregateModels.Locations.Region", b =>
                {
                    b.HasOne("Octovis.Location.Domain.AggregateModels.Addresses.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Octovis.Location.Domain.AggregateModels.Locations.Location", null)
                        .WithOne("Region")
                        .HasForeignKey("Octovis.Location.Domain.AggregateModels.Locations.Region", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("Octovis.Location.Domain.AggregateModels.Locations.Room", b =>
                {
                    b.HasOne("Octovis.Location.Domain.AggregateModels.Locations.Location", null)
                        .WithOne("Room")
                        .HasForeignKey("Octovis.Location.Domain.AggregateModels.Locations.Room", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Octovis.Location.Domain.AggregateModels.Locations.UserLocation", b =>
                {
                    b.HasOne("Octovis.Location.Domain.AggregateModels.Locations.Location", null)
                        .WithMany("UserLocations")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Octovis.Location.Domain.AggregateModels.Addresses.City", b =>
                {
                    b.Navigation("_districts");
                });

            modelBuilder.Entity("Octovis.Location.Domain.AggregateModels.Addresses.Country", b =>
                {
                    b.Navigation("_cities");
                });

            modelBuilder.Entity("Octovis.Location.Domain.AggregateModels.Locations.Location", b =>
                {
                    b.Navigation("Area");

                    b.Navigation("Company");

                    b.Navigation("Dealer");

                    b.Navigation("Region");

                    b.Navigation("Room");

                    b.Navigation("UserLocations");
                });
#pragma warning restore 612, 618
        }
    }
}
