// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Octovis.Notification.Infrastructure.Persistence.Context;

#nullable disable

namespace Octovis.Notification.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(NotificationDbContext))]
    [Migration("20250619060027_InitNotificationSchema")]
    partial class InitNotificationSchema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("notification")
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Octovis.Notification.Domain.AggregateModels.NotificationLogs.NotificationLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AttemptNo")
                        .HasColumnType("integer");

                    b.Property<DateTime>("AttemptTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("NotificationRequestId")
                        .HasColumnType("uuid");

                    b.Property<string>("Response")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<bool>("Success")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("NotificationRequestId");

                    b.ToTable("NotificationLogs", "notification");
                });

            modelBuilder.Entity("Octovis.Notification.Domain.AggregateModels.NotificationRequests.NotificationRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("MaxRetry")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ProcessedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RequestType")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("character varying(21)");

                    b.Property<int>("RetryCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("SentAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("NotificationRequests", "notification");

                    b.HasDiscriminator<string>("RequestType").HasValue("NotificationRequest");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Octovis.Notification.Domain.AggregateModels.NotificationRequests.NotificationRequestEmail", b =>
                {
                    b.HasBaseType("Octovis.Notification.Domain.AggregateModels.NotificationRequests.NotificationRequest");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EmailTo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("Email");
                });

            modelBuilder.Entity("Octovis.Notification.Domain.AggregateModels.NotificationRequests.NotificationRequestSms", b =>
                {
                    b.HasBaseType("Octovis.Notification.Domain.AggregateModels.NotificationRequests.NotificationRequest");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("Sms");
                });

            modelBuilder.Entity("Octovis.Notification.Domain.AggregateModels.NotificationLogs.NotificationLog", b =>
                {
                    b.HasOne("Octovis.Notification.Domain.AggregateModels.NotificationRequests.NotificationRequest", null)
                        .WithMany("Logs")
                        .HasForeignKey("NotificationRequestId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Octovis.Notification.Domain.AggregateModels.NotificationRequests.NotificationRequest", b =>
                {
                    b.Navigation("Logs");
                });
#pragma warning restore 612, 618
        }
    }
}
